<?php

    namespace App\Console\Commands;
    use Illuminate\Console\Command;

    class CurrencyConversion extends Command{
        /**
         * The name and signature of the console command.
         *
         * @var string
         */
        protected $signature = 'currencyconversion';

        /**
         * The console command description.
         *
         * @var string
         */
        protected $description = 'Fetch currency conversion rate for google api every day.';

        /**
         * Create a new command instance.
         *
         * @return void
         */
        public function __construct()
        {
            parent::__construct();
        }

        /**
         * Execute the console command.
         *
         * @return mixed
         */
        public function handle(){            
            $currencies         = \DB::table('currencies')->select(['id','iso_code','sign'])->get();
            $amount             = urlencode(1);
            $default_currency   = \Models\Currency::getDefaultCurrency();

            if(!empty($default_currency)){
                $from_currency  = urlencode($default_currency->iso_code);
            }else{
                $from_currency  = DEFAULT_CURRENCY;
            }
            

            foreach ($currencies as $item) {
                $to_currency    = urlencode($item->iso_code);
                $api_url        = "https://www.google.com/finance/converter?a=$amount&from=$from_currency&to=$to_currency";
                
                $ch = curl_init();
                $timeout = 0;
                curl_setopt ($ch, CURLOPT_URL, $api_url);
                curl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);

                curl_setopt ($ch, CURLOPT_USERAGENT,"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)");
                curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
                
                $rawdata = curl_exec($ch);
                curl_close($ch);
                
                preg_match_all ('/<span.*?>(.*?)<\/span>/', $rawdata, $result);

                $isUpdated = \DB::table('currencies')
                ->where('id',$item->id)
                ->update([
                    'conversion_rate' => @(float)___round($result[1][0]),
                    'updated' => date('Y-m-d H:i:s')
                ]);
            }
        }
    }
