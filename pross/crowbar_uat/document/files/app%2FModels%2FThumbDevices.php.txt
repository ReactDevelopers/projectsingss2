<?php

    namespace Models; 

    use Illuminate\Database\Eloquent\Model;
    use Illuminate\Support\Facades\DB;
    use Illuminate\Support\Facades\Crypt;
    use Illuminate\Support\Facades\Mail;

    class ThumbDevices extends Model{
        protected $table = 'thumb_devices';
        protected $primaryKey = 'id_thumb_device';
        
        const CREATED_AT = 'created';
        const UPDATED_AT = 'updated';

        protected $fillable = [];

        protected $hidden = [];

        public function __construct() {
            
        }

        public static function findById($device_uuid,$device_type){
            if(!empty($device_uuid)){
                $table_thumb_devices    = \DB::table('thumb_devices');
                $is_device_exists       = $table_thumb_devices->where([
                    'device_uuid'       => $device_uuid,
                    //'device_type'       => $device_type
                ])->get();
                
                if(!empty($is_device_exists->count())){
                    return $is_device_exists->first();
                }else{
                    return false;
                }
            }else{
                return false;
            }
        }

        public static function add($user_id,$device_uuid ="", $device_type = "", $device_name = "", $setting = "off"){
            $user                   = \Models\Users::findById($user_id,['id_user']);
            $all_devices            = ___devices();

            if(!empty($user) && !empty($device_uuid) && in_array(strtolower($device_type), $all_devices)){
                $table_thumb_devices     = \DB::table('thumb_devices');
                $table_thumb_devices->where('user_id','!=',$user_id);
                $table_thumb_devices->where('device_uuid',$device_uuid);
                //$table_thumb_devices->where('device_type','=',$device_type);
                $table_thumb_devices->delete();

                $table_thumb_devices     = \DB::table('thumb_devices');
                $table_thumb_devices->where('user_id','=',$user_id);
                $table_thumb_devices->where('device_uuid','!=',$device_uuid);
                //$table_thumb_devices->where('device_type','=',$device_type);
                $table_thumb_devices->delete();
                
                if($setting === 'on'){
                    $table_thumb_devices     = \DB::table('thumb_devices');
                    $is_device_exists = $table_thumb_devices->where([
                        'user_id' => $user_id,
                        'device_uuid' => $device_uuid
                    ])->get()->count();

                    if(empty($is_device_exists)){
                        $insert_data = [
                            'user_id' => $user_id,
                            'device_name' => ($device_name)?$device_name:ucfirst(strtolower($device_type)),
                            'device_type' => strtolower($device_type),
                            'device_uuid' => $device_uuid,
                            'created' => date('Y-m-d H:i:s'),
                            'updated' => date('Y-m-d H:i:s'),
                        ];

                        return (bool) $table_thumb_devices->insert($insert_data);
                    }else{
                        
                        $table_thumb_devices     = \DB::table('thumb_devices');
                        $table_thumb_devices->where('user_id',$user_id);
                        $table_thumb_devices->where('device_uuid',$device_uuid);

                        return (bool) $table_thumb_devices->update(['updated' => date('Y-m-d H:i:s')]);
                    }
                }else{
                    $table_thumb_devices     = \DB::table('thumb_devices');
                    $table_thumb_devices->where('user_id','=',$user_id);
                    $table_thumb_devices->where('device_uuid','=',$device_uuid);
                    $table_thumb_devices->delete();

                    return true;
                }
            }else{
                return false;
            }
        }

        public static function is_device_configured($user_id, $device_uuid){
            $table_thumb_devices    = \DB::table('thumb_devices');
            $is_device_configured   = $table_thumb_devices->where([
                'device_uuid'       => $device_uuid,
                'user_id'           => $user_id,
            ])->get()->count();

            if(!empty($is_device_configured)){
                return DEFAULT_YES_VALUE;
            }else{
                return DEFAULT_NO_VALUE;
            }
        }
    }
